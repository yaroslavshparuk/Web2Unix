// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web2Unix.Infrastructure;

#nullable disable

namespace Web2Unix.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230420183254_AddAllowedConnection")]
    partial class AddAllowedConnection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web2Unix.Domain.Entities.AllowedConnection", b =>
                {
                    b.Property<int>("WebUserId")
                        .HasColumnType("int");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.Property<string>("FromIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WebUserId", "ServerId");

                    b.HasIndex("ServerId");

                    b.ToTable("AllowedConnections");

                    b.HasData(
                        new
                        {
                            WebUserId = 1,
                            ServerId = 1,
                            FromIpAddress = "127.0.0.1"
                        });
                });

            modelBuilder.Entity("Web2Unix.Domain.Entities.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Port")
                        .HasColumnType("smallint");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Web2Unix.Domain.Entities.WebRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WebRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Web2Unix.Domain.Entities.WebUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WebUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 4, 20, 18, 32, 54, 860, DateTimeKind.Unspecified).AddTicks(2419), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "shparuk1996@gmail.com",
                            PasswordHash = new byte[] { 0 },
                            PasswordSalt = new byte[] { 0 },
                            UpdatedAt = new DateTimeOffset(new DateTime(2023, 4, 20, 18, 32, 54, 860, DateTimeKind.Unspecified).AddTicks(2434), new TimeSpan(0, 0, 0, 0, 0)),
                            Username = "yaroslav"
                        });
                });

            modelBuilder.Entity("Web2Unix.Domain.Entities.WebUserRole", b =>
                {
                    b.Property<int>("WebUserId")
                        .HasColumnType("int");

                    b.Property<int>("WebRoleId")
                        .HasColumnType("int");

                    b.HasKey("WebUserId", "WebRoleId");

                    b.HasIndex("WebRoleId");

                    b.ToTable("WebUserRoles");

                    b.HasData(
                        new
                        {
                            WebUserId = 1,
                            WebRoleId = 1
                        });
                });

            modelBuilder.Entity("Web2Unix.Domain.Entities.AllowedConnection", b =>
                {
                    b.HasOne("Web2Unix.Domain.Entities.Server", "Server")
                        .WithMany("AllowedForUsers")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web2Unix.Domain.Entities.WebUser", "WebUser")
                        .WithMany("AllowedConnections")
                        .HasForeignKey("WebUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");

                    b.Navigation("WebUser");
                });

            modelBuilder.Entity("Web2Unix.Domain.Entities.WebUserRole", b =>
                {
                    b.HasOne("Web2Unix.Domain.Entities.WebRole", "WebRole")
                        .WithMany("WebUserRoles")
                        .HasForeignKey("WebRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web2Unix.Domain.Entities.WebUser", "WebUser")
                        .WithMany("WebUserRoles")
                        .HasForeignKey("WebUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebRole");

                    b.Navigation("WebUser");
                });

            modelBuilder.Entity("Web2Unix.Domain.Entities.Server", b =>
                {
                    b.Navigation("AllowedForUsers");
                });

            modelBuilder.Entity("Web2Unix.Domain.Entities.WebRole", b =>
                {
                    b.Navigation("WebUserRoles");
                });

            modelBuilder.Entity("Web2Unix.Domain.Entities.WebUser", b =>
                {
                    b.Navigation("AllowedConnections");

                    b.Navigation("WebUserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
